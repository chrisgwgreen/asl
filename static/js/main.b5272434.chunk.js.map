{"version":3,"sources":["utils/letters.ts","utils/mediaTemplate.ts","utils/constants.ts","components/Button.tsx","components/Letter.tsx","assets/random.svg","App.tsx","hooks/useIsTabletViewport.ts","index.tsx"],"names":["newLetter","String","fromCharCode","Math","floor","random","toLowerCase","mediaQuery","maxWidth","ButtonWrapper","styled","button","Button","props","children","onClick","document","activeElement","blur","LetterWrapper","div","isSign","isOver","css","Letter","letter","useState","setIsOver","letterWrapper","useRef","useEffect","letterElement","current","handleLetterOver","handleLetterOut","addEventListener","removeEventListener","ref","isTabletViewport","Image","img","App","setLetter","setIsSign","setIsTabletViewport","matchMediaQuery","window","matchMedia","onWidthChange","matches","addListener","removeListener","useIsTabletViewport","handleKeyUp","e","keyCode","className","src","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b5272434.chunk.js","sourcesContent":["export const newLetter = () => {\n  return String.fromCharCode(65 + Math.floor(Math.random() * 26)).toLowerCase();\n};\n","import { TABLET_BREAKPOINT, MOBILE_BREAKPOINT } from \"./\";\n\nexport const mediaQuery = (maxWidth: number) => `(max-width: ${maxWidth}px)`;\n\nexport const media = {\n  custom: mediaQuery,\n  tablet: `@media ${mediaQuery(TABLET_BREAKPOINT)}`,\n  mobile: `@media ${mediaQuery(MOBILE_BREAKPOINT)}`,\n};\n","// Breakpoints\nexport const TABLET_BREAKPOINT = 992;\nexport const MOBILE_BREAKPOINT = 600;\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components/macro\";\n\ninterface Props {\n  children: ReactNode;\n  onClick: () => void;\n}\n\nconst ButtonWrapper = styled.button`\n  padding: 1rem 2rem;\n  font-size: 2rem;\n  font-family: normal;\n  outline: none;\n  border: none;\n  background: #83af9b;\n  cursor: pointer;\n\n  :hover {\n    background: #c8c8a9;\n  }\n`;\n\nexport const Button = (props: Props) => {\n  const { children, onClick } = props;\n\n  const handleClick = () => {\n    onClick();\n\n    // @ts-ignore\n    document.activeElement.blur();\n  };\n\n  return <ButtonWrapper onClick={handleClick}>{children}</ButtonWrapper>;\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport styled, { css } from \"styled-components/macro\";\n\ninterface Props {\n  letter: string;\n  isSign: boolean;\n}\n\nconst LetterWrapper = styled.div<{ isSign: boolean; isOver: boolean }>(\n  (props) => {\n    const { isSign, isOver } = props;\n\n    return css`\n      position: absolute;\n      left: 50%;\n      top: 40%;\n      transform: translate(-50%, -50%);\n      font-size: 500px;\n      cursor: pointer;\n      display: block;\n\n      ${isSign &&\n      css`\n        font-family: sign;\n      `}\n      ${isSign &&\n      isOver &&\n      css`\n        font-family: normal;\n      `}\n\n      ${!isSign &&\n      css`\n        font-family: normal;\n      `}\n\n      ${!isSign &&\n      isOver &&\n      css`\n        font-family: sign;\n      `}\n    `;\n  }\n);\n\nexport const Letter = (props: Props) => {\n  const { letter, isSign } = props;\n\n  const [isOver, setIsOver] = useState(false);\n\n  const letterWrapper = useRef<HTMLDivElement>();\n\n  useEffect(() => {\n    const letterElement = letterWrapper.current;\n\n    const handleLetterOver = () => setIsOver(true);\n    const handleLetterOut = () => setIsOver(false);\n\n    if (letterElement) {\n      letterElement.addEventListener(\"mouseover\", handleLetterOver);\n      letterElement.addEventListener(\"mouseout\", handleLetterOut);\n    }\n\n    return () => {\n      if (letterElement) {\n        letterElement.removeEventListener(\"mouseover\", handleLetterOver);\n        letterElement.removeEventListener(\"mouseout\", handleLetterOut);\n      }\n    };\n  }, []);\n\n  return (\n    <LetterWrapper\n      isSign={isSign}\n      isOver={isOver}\n      ref={(ref) => {\n        letterWrapper.current = ref as HTMLDivElement;\n      }}\n    >\n      {letter}\n    </LetterWrapper>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/random.90637106.svg\";","import React, { useState, useEffect } from \"react\";\nimport styled, { css } from \"styled-components/macro\";\nimport { newLetter } from \"./utils\";\nimport { useIsTabletViewport } from \"./hooks\";\nimport { Letter, Button } from \"./components\";\n\nimport random from \"./assets/random.svg\";\n\nconst ButtonWrapper = styled.div<{ isTabletViewport: boolean }>((props) => {\n  const { isTabletViewport } = props;\n\n  return css`\n    position: fixed;\n    bottom: 1rem;\n    left: 50%;\n    transform: translateX(-50%);\n\n    ${!isTabletViewport &&\n    css`\n      > button:nth-child(1) {\n        margin-right: 0.5rem;\n      }\n\n      > button:nth-child(2) {\n        margin-left: 0.5rem;\n      }\n    `}\n\n    ${isTabletViewport &&\n    css`\n      > button:nth-child(1) {\n        width: 100%;\n        margin-bottom: 1rem;\n      }\n\n      > button:nth-child(2) {\n        width: 100%;\n      }\n    `}\n  `;\n});\n\nconst Image = styled.img`\n  width: 1.5rem;\n  height: 1.5rem;\n`;\n\nfunction App() {\n  const [letter, setLetter] = useState(newLetter());\n  const [isSign, setIsSign] = useState(false);\n\n  const isTabletViewport = useIsTabletViewport();\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (e.keyCode === 32) {\n        setLetter(newLetter);\n      }\n    };\n\n    document.addEventListener(\"keyup\", handleKeyUp);\n\n    return () => {\n      document.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, []);\n\n  const handleToggleIsSign = () => {\n    setIsSign(!isSign);\n  };\n\n  const handleLetterChange = () => {\n    setLetter(newLetter);\n  };\n\n  return (\n    <div className=\"App\">\n      <Letter letter={letter} isSign={isSign} />\n      <ButtonWrapper isTabletViewport={isTabletViewport}>\n        <Button onClick={handleToggleIsSign}>Toggle Sign/Letter</Button>\n        <Button onClick={handleLetterChange}>\n          <Image src={random} alt=\"\" />\n        </Button>\n      </ButtonWrapper>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\nimport { TABLET_BREAKPOINT, mediaQuery } from \"../utils\";\n\n/*\n * Hook\n */\nexport const useIsTabletViewport = () => {\n  const [isTabletViewport, setIsTabletViewport] = useState(false);\n\n  useEffect(() => {\n    const matchMediaQuery = window.matchMedia(mediaQuery(TABLET_BREAKPOINT));\n\n    const onWidthChange = () => {\n      setIsTabletViewport(matchMediaQuery.matches);\n    };\n\n    if (matchMediaQuery.addEventListener) {\n      matchMediaQuery.addEventListener(\"change\", onWidthChange);\n    } else {\n      matchMediaQuery.addListener(onWidthChange);\n    }\n\n    onWidthChange();\n\n    return () => {\n      if (matchMediaQuery.removeEventListener) {\n        matchMediaQuery.removeEventListener(\"change\", onWidthChange);\n      } else {\n        matchMediaQuery.removeListener(onWidthChange);\n      }\n    };\n  }, []);\n\n  return isTabletViewport;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}