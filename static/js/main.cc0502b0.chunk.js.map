{"version":3,"sources":["utils/letters.ts","utils/mediaTemplate.ts","utils/device.ts","utils/constants.ts","components/Button.tsx","hooks/useIsTabletViewport.ts","components/Letter.tsx","assets/random.svg","assets/chevron.svg","App.tsx","index.tsx"],"names":["newLetter","String","fromCharCode","Math","floor","random","toLowerCase","mediaQuery","maxWidth","isTouchDevice","document","documentElement","ButtonWrapper","styled","button","props","isTabletViewport","color","bgColor","Color","css","toString","darken","Button","children","onClick","useState","setIsTabletViewport","useEffect","matchMediaQuery","window","matchMedia","onWidthChange","matches","addEventListener","addListener","removeEventListener","removeListener","useIsTabletViewport","LetterWrapper","div","isSign","isOver","language","Letter","letter","setIsOver","letterWrapper","useRef","letterElement","current","handleLetterOver","handleLetterOut","handleTouch","ref","ButtonDirectionWrapper","Image","img","RightChevron","LeftChevron","SignToggleWrapper","App","setLetter","setIsSign","setLanguage","handleLetterChange","handlePreviousLetter","useCallback","charCode","charCodeAt","handleNextLetter","handleKeyUp","e","keyCode","title","toUpperCase","src","chevron","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cc0502b0.chunk.js","sourcesContent":["export const newLetter = () => {\n  return String.fromCharCode(65 + Math.floor(Math.random() * 26)).toLowerCase();\n};\n","import { TABLET_BREAKPOINT, MOBILE_BREAKPOINT } from \"./\";\n\nexport const mediaQuery = (maxWidth: number) => `(max-width: ${maxWidth}px)`;\n\nexport const media = {\n  custom: mediaQuery,\n  tablet: `@media ${mediaQuery(TABLET_BREAKPOINT)}`,\n  mobile: `@media ${mediaQuery(MOBILE_BREAKPOINT)}`,\n};\n","export const isTouchDevice = \"ontouchstart\" in document.documentElement;\n","// Breakpoints\nexport const TABLET_BREAKPOINT = 992;\nexport const MOBILE_BREAKPOINT = 600;\n","import React, { ReactNode } from \"react\";\nimport styled, { css } from \"styled-components/macro\";\nimport Color from \"color\";\nimport { useIsTabletViewport } from \"../hooks\";\n\ninterface Props {\n  children: ReactNode;\n  color?: string;\n  onClick: () => void;\n}\n\nconst ButtonWrapper = styled.button<{\n  isTabletViewport: boolean;\n  color?: string;\n}>((props) => {\n  const { isTabletViewport, color = \"#83af9b\" } = props;\n\n  const bgColor = Color(color);\n\n  return css`\n    padding: 1rem 2rem;\n    font-size: 2rem;\n    font-family: normal;\n    outline: none;\n    border: none;\n    background: ${bgColor.toString()};\n    cursor: pointer;\n\n    :hover,\n    :focus {\n      background: ${bgColor.darken(0.2).toString()};\n    }\n\n    ${isTabletViewport &&\n    css`\n      font-size: 1.5rem;\n    `}\n  `;\n});\n\nexport const Button = (props: Props) => {\n  const { children, onClick, color } = props;\n\n  const isTabletViewport = useIsTabletViewport();\n\n  return (\n    <ButtonWrapper\n      onClick={onClick}\n      isTabletViewport={isTabletViewport}\n      color={color}\n    >\n      {children}\n    </ButtonWrapper>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { TABLET_BREAKPOINT, mediaQuery } from \"../utils\";\n\n/*\n * Hook\n */\nexport const useIsTabletViewport = () => {\n  const [isTabletViewport, setIsTabletViewport] = useState(false);\n\n  useEffect(() => {\n    const matchMediaQuery = window.matchMedia(mediaQuery(TABLET_BREAKPOINT));\n\n    const onWidthChange = () => {\n      setIsTabletViewport(matchMediaQuery.matches);\n    };\n\n    if (matchMediaQuery.addEventListener) {\n      matchMediaQuery.addEventListener(\"change\", onWidthChange);\n    } else {\n      matchMediaQuery.addListener(onWidthChange);\n    }\n\n    onWidthChange();\n\n    return () => {\n      if (matchMediaQuery.removeEventListener) {\n        matchMediaQuery.removeEventListener(\"change\", onWidthChange);\n      } else {\n        matchMediaQuery.removeListener(onWidthChange);\n      }\n    };\n  }, []);\n\n  return isTabletViewport;\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport styled, { css } from \"styled-components/macro\";\nimport { language } from \"../types\";\nimport { isTouchDevice } from \"../utils\";\n\ninterface Props {\n  letter: string;\n  isSign: boolean;\n  language: language;\n}\n\nconst LetterWrapper = styled.div<{\n  isSign: boolean;\n  isOver: boolean;\n  language: language;\n}>((props) => {\n  const { isSign, isOver, language } = props;\n\n  return css`\n    text-align: center;\n    text-transform: uppercase;\n    position: absolute;\n    top: calc(50% - 50px);\n    transform: translate(-50%, -50%);\n    left: 50%;\n    font-size: 40vh;\n\n    cursor: pointer;\n    display: block;\n\n    ${isSign &&\n    isOver &&\n    css`\n      font-family: normal;\n    `}\n\n    ${!isSign &&\n    css`\n      font-family: normal;\n    `}\n\n    ${isSign &&\n    css`\n      font-family: ${language};\n    `}\n\n    ${!isSign &&\n    isOver &&\n    css`\n      font-family: ${language};\n    `}\n\n    ${language === \"asl\" &&\n    (isSign || (!isSign && isOver)) &&\n    css`\n      font-size: 65vh;\n    `}\n\n    ${language === \"bsl\" &&\n    (isSign || (!isSign && isOver)) &&\n    css`\n      font-size: 40vh;\n    `}\n    \n    ${language === \"isl\" &&\n    (isSign || (!isSign && isOver)) &&\n    css`\n      font-size: 35vh;\n    `}\n  `;\n});\n\nexport const Letter = (props: Props) => {\n  const { letter, isSign, language } = props;\n\n  const [isOver, setIsOver] = useState(false);\n\n  const letterWrapper = useRef<HTMLDivElement>();\n\n  useEffect(() => {\n    const letterElement = letterWrapper.current;\n\n    const handleLetterOver = () => setIsOver(true);\n    const handleLetterOut = () => setIsOver(false);\n    const handleTouch = () => setIsOver(!isOver);\n\n    if (letterElement && !isTouchDevice) {\n      letterElement.addEventListener(\"mouseover\", handleLetterOver);\n      letterElement.addEventListener(\"mouseout\", handleLetterOut);\n    }\n\n    if (letterElement && isTouchDevice) {\n      letterElement.addEventListener(\"click\", handleTouch);\n    }\n\n    return () => {\n      if (letterElement && !isTouchDevice) {\n        letterElement.removeEventListener(\"mouseover\", handleLetterOver);\n        letterElement.removeEventListener(\"mouseout\", handleLetterOut);\n      }\n\n      if (letterElement && isTouchDevice) {\n        letterElement.removeEventListener(\"click\", handleTouch);\n      }\n    };\n  }, [isOver]);\n\n  return (\n    <LetterWrapper\n      isSign={isSign}\n      language={language}\n      isOver={isOver}\n      ref={(ref) => {\n        letterWrapper.current = ref as HTMLDivElement;\n      }}\n    >\n      {letter}\n    </LetterWrapper>\n  );\n};\n\n/* \n    ${!isASL &&\n    */\n","export default __webpack_public_path__ + \"static/media/random.90637106.svg\";","export default __webpack_public_path__ + \"static/media/chevron.92fb95f9.svg\";","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { newLetter } from \"./utils\";\nimport { Letter, Button } from \"./components\";\nimport { language } from \"./types\";\nimport random from \"./assets/random.svg\";\nimport chevron from \"./assets/chevron.svg\";\n\nconst ButtonWrapper = styled.div`\n  position: fixed;\n  bottom: 1rem;\n  left: 1rem;\n  right: 1rem;\n\n  > button:nth-child(1) {\n    width: 100%;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst ButtonDirectionWrapper = styled.div`\n  display: flex;\n\n  > button:nth-child(1) {\n    flex: 1;\n  }\n\n  > button:nth-child(2) {\n    flex: 5;\n    margin: 0 0.5rem;\n  }\n\n  > button:nth-child(3) {\n    flex: 1;\n  }\n`;\n\nconst Image = styled.img`\n  width: 1.5rem;\n  height: 1.5rem;\n`;\n\nconst RightChevron = styled.img`\n  width: 1.5rem;\n  height: 1.5rem;\n`;\n\nconst LeftChevron = styled.img`\n  width: 1.5rem;\n  height: 1.5rem;\n  transform: rotate(180deg);\n`;\n\nconst SignToggleWrapper = styled.div`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n`;\n\nfunction App() {\n  const [letter, setLetter] = useState(newLetter());\n  const [isSign, setIsSign] = useState(false);\n  const [language, setLanguage] = useState<language>(\"asl\");\n\n  /*\n   * Event Handlers\n   */\n\n  const handleToggleIsSign = () => {\n    setIsSign(!isSign);\n  };\n\n  const handleChangeLanguage = () => {\n    switch (language) {\n      case \"asl\":\n        document.title = \"BSL\";\n        setLanguage(\"bsl\");\n        break;\n      case \"bsl\":\n        document.title = \"ISL\";\n        setLanguage(\"isl\");\n        break;\n      case \"isl\":\n        document.title = \"ASL\";\n        setLanguage(\"asl\");\n        break;\n    }\n  };\n\n  const handleLetterChange = () => {\n    setLetter(newLetter);\n  };\n\n  const handlePreviousLetter = useCallback(() => {\n    let charCode = letter.charCodeAt(0);\n\n    if (charCode === 97) {\n      charCode = 122;\n    } else {\n      charCode = letter.charCodeAt(0) - 1;\n    }\n\n    setLetter(String.fromCharCode(charCode));\n  }, [letter]);\n\n  const handleNextLetter = useCallback(() => {\n    let charCode = letter.charCodeAt(0);\n\n    if (charCode === 122) {\n      charCode = 97;\n    } else {\n      charCode = letter.charCodeAt(0) + 1;\n    }\n\n    setLetter(String.fromCharCode(charCode));\n  }, [letter]);\n\n  /*\n   * React Hooks\n   */\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (e.keyCode === 32) {\n        handleLetterChange();\n      }\n      if (e.keyCode === 37) {\n        handlePreviousLetter();\n      }\n      if (e.keyCode === 39) {\n        handleNextLetter();\n      }\n    };\n\n    document.addEventListener(\"keyup\", handleKeyUp);\n\n    return () => {\n      document.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, [handleNextLetter, handlePreviousLetter]);\n\n  return (\n    <>\n      <Letter letter={letter} isSign={isSign} language={language} />\n\n      <SignToggleWrapper>\n        <Button onClick={handleChangeLanguage} color=\"#F4EC58\">\n          {language.toUpperCase()}\n        </Button>\n      </SignToggleWrapper>\n\n      <ButtonWrapper>\n        <Button onClick={handleToggleIsSign} color=\"#F4EC58\">\n          Toggle Sign/Letter\n        </Button>\n\n        <ButtonDirectionWrapper>\n          <Button onClick={handlePreviousLetter} color=\"#FF8084\">\n            <LeftChevron src={chevron} alt=\"previous letter\" />\n          </Button>\n          <Button onClick={handleLetterChange} color=\"#6ED9BF\">\n            <Image src={random} alt=\"shuffle letter\" />\n          </Button>\n          <Button onClick={handleNextLetter} color=\"#FF8084\">\n            <RightChevron src={chevron} alt=\"next letter\" />\n          </Button>\n        </ButtonDirectionWrapper>\n      </ButtonWrapper>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}